version: '3.9'

volumes:
  pbn_db_data:  
  pbn_app:
  elasticsearch:

services:
  db:
    image: mysql:5.7    
    restart: always
    environment:
      - MYSQL_DATABASE=serasa
      - MYSQL_ROOT_PASSWORD=java
    ports:
      - 3308:3306
    volumes:
      - ${HOME}/db:/var/lib/mysql/
    networks:
      - elk  
  
  redis:
    image: "redis:alpine"    
    ports:
     - "6379:6379"    
    environment:
     - REDIS_REPLICATION_MODE=master
    networks:
      - elk 

  elasticsearch:
    container_name: library_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    networks:
      - elk      
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node

  logstash:
    container_name: library_logstash
    image: docker.elastic.co/logstash/logstash:7.15.2
    volumes:
      - type: bind
        source: ./user/.logstash
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
      - "4560:4560"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    depends_on:
      - elasticsearch

  kibana:
    container_name: library_kibana
    image: docker.elastic.co/kibana/kibana:7.15.2
    ports:
      - "5601:5601"
    networks:
      - elk              
    depends_on:
      - elasticsearch   

  user-api:    
    build:    
      context: ./user-api
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
      - elasticsearch       
    working_dir: /app
    command: [sh, -c, 'mkdir -p ~/logs/; cd /src ; mvn clean spring-boot:run -Dspring.profiles.active=local -DLOG_DIR=/root/logs/ -DLOG_FILE=hubstamper.log']
    ports:
      - 8080:8080
    volumes:
      - pbn_app:/.m2:/root/.m2
    networks:
      - elk

  order-api:    
    build:    
      context: ./order-api
      dockerfile: Dockerfile
    depends_on:
      - db
      - user-api     
    working_dir: /app
    command: [sh, -c, 'mkdir -p ~/logs/; cd /src ; mvn clean spring-boot:run -Dspring.profiles.active=local -DLOG_DIR=/root/logs/ -DLOG_FILE=hubstamper.log']
    ports:
      - "8081:8081"  
    volumes:
      - pbn_app:/.m2:/root/.m2
    networks:
      - elk    

networks:
  elk:
    driver: bridge             